services:

  nginx:
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
    depends_on:
      - backend
      - frontend
    networks:
      - app

  postgres:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - app
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: back
      dockerfile: Dockerfile
      args:
        SERVER__HOST: 0.0.0.0
        SERVER__PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app
    volumes:
      - image_data:/app/uploads

  frontend:
    build:
      context: front
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  image_data:
